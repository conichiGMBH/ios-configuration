//
// Copyright (c) 2015-present, conichi GmbH.
// All rights reserved.
//
//
// Created by Anton Domashnev on 02/09/16.
//
//

// Treat Warnings as Errors
//
// Enabling this option causes all warnings to be treated as errors.

GCC_TREAT_WARNINGS_AS_ERRORS = YES

WARNING_CFLAGS = -Weverything -Wno-gnu-statement-expression -Wno-objc-missing-property-synthesis -Wno-gnu-zero-variadic-macro-arguments -Wno-cstring-format-directive -Wno-missing-variable-declarations -Wno-auto-import

ENABLE_STRICT_OBJC_MSGSEND = YES

GCC_WARN_ABOUT_MISSING_PROTOTYPES = YES
GCC_WARN_SIGN_COMPARE = YES
GCC_WARN_ABOUT_MISSING_FIELD_INITIALIZERS = YES
GCC_WARN_UNUSED_LABEL = YES
GCC_WARN_ABOUT_DEPRECATED_FUNCTIONS = YES
GCC_WARN_ABOUT_MISSING_NEWLINE = YES
GCC_WARN_ABOUT_POINTER_SIGNEDNESS = YES
GCC_WARN_CHECK_SWITCH_STATEMENTS = YES
GCC_WARN_MISSING_PARENTHESES = YES
GCC_WARN_TYPECHECK_CALLS_TO_PRINTF = YES
GCC_WARN_UNKNOWN_PRAGMAS = YES
GCC_WARN_UNUSED_FUNCTION = YES
GCC_WARN_UNUSED_LABEL = YES
GCC_WARN_UNUSED_VALUE = YES
GCC_WARN_UNUSED_VARIABLE = YES
GCC_WARN_ALLOW_INCOMPLETE_PROTOCOL = YES
GCC_WARN_UNDECLARED_SELECTOR = YES
GCC_WARN_64_TO_32_BIT_CONVERSION = YES
GCC_WARN_UNINITIALIZED_AUTOS = YES
GCC_WARN_INITIALIZER_NOT_FULLY_BRACKETED = YES
GCC_WARN_SHADOW = YES
GCC_TREAT_INCOMPATIBLE_POINTER_TYPE_WARNINGS_AS_ERRORS = YES

CLANG_WARN_ASSIGN_ENUM = YES
CLANG_WARN_OBJC_IMPLICIT_ATOMIC_PROPERTIES = YES
CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES
CLANG_WARN_OBJC_REPEATED_USE_OF_WEAK = YES
CLANG_WARN__ARC_BRIDGE_CAST_NONARC = YES
CLANG_WARN_BOOL_CONVERSION = YES
CLANG_WARN_CONSTANT_CONVERSION = YES
CLANG_WARN_DOCUMENTATION_COMMENTS = YES
CLANG_WARN_EMPTY_BODY = YES
CLANG_WARN_ENUM_CONVERSION = YES
CLANG_WARN_UNREACHABLE_CODE = YES
CLANG_WARN__DUPLICATE_METHOD_MATCH = YES
CLANG_WARN_SUSPICIOUS_IMPLICIT_CONVERSION = YES
CLANG_WARN_OBJC_IMPLICIT_ATOMIC_PROPERTIES = YES
CLANG_WARN_BOOL_CONVERSION = YES
CLANG_WARN_INFINITE_RECURSION = YES
CLANG_WARN_SUSPICIOUS_MOVE = YES
CLANG_WARN_NULLABLE_TO_NONNULL_CONVERSION = YES
CLANG_WARN_IMPLICIT_SIGN_CONVERSION = YES

// Errors
GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR
CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR
CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR

// Static Analyzer Warnings
CLANG_ANALYZER_NONNULL = YES
CLANG_ANALYZER_SECURITY_FLOATLOOPCOUNTER = YES
